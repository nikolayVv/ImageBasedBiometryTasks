import matplotlib.pyplot as plt

# Inserted results from the main.py with singleMode=False
if __name__ == "__main__":
    # X-axis values for the average IoUs
    thresholdNumberInt = list(range(1, 101))
    thresholdNumber = [i / 100 for i in thresholdNumberInt]
    # Values for the axises
    normalizedNumbers = [0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0]
    normalizedNumbersLabels = ["0.01", " ", "0.1", " ", "0.2", " ", "0.3", " ", "0.4", " ", "0.5", " ", "0.6", " ", "0.7", " ", "0.8", " ", "0.9", " ", "1.0"]
    percentageNumbers = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100]
    percentageNumbersLabels = ["0", " ", "10", " ", "20", " ", "30", " ", "40", " ", "50", " ", "60", " ", "70", " ", "80", " ", "90", " ", "100"]
    shortPercentageNumbers = [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10]
    shortPercentageNumbersLabels = ["0", " ", "1", " ", "2", " ", "3", " ", "4", " ", "5", " ", "6", " ", "7", " ", "8", " ", "9", " ", "10"]
    # X-axis values for the average accuracies
    detectionTypes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    detectionTypesLabels = [
        "VC (1.01, 1)", "VC (1.01, 3)", "VC (1.01, 5)",
        "VC (1.03, 1)", "VC (1.03, 3)", "VC (1.03, 5)",
        "VC (1.05, 1)", "VC (1.05, 3)", "VC (1.05, 5)", "YOLOv5"
    ]

    # Figure for the average accuracies
    figureAccuracyAVG = plt.figure()
    axisAccuracyAVG = figureAccuracyAVG.add_subplot(111)
    # Data for the average accuracies
    accuracyAvgs = [0.007, 0.005, 0.004, 0.0105, 0.0085, 0.008, 0.0085, 0.005, 0.0035, 0.0745]
    accuracyAvgs = [i * 100 for i in accuracyAvgs]
    axisAccuracyAVG.bar(detectionTypes, accuracyAvgs, width = 0.6)
    # Draw the figure for the average accuracies
    axisAccuracyAVG.set_ylim(0, 10)
    axisAccuracyAVG.set_yticks(shortPercentageNumbers, labels = shortPercentageNumbersLabels)
    axisAccuracyAVG.set_xlim(0, 11)
    axisAccuracyAVG.set_xticks(detectionTypes, labels = detectionTypesLabels)
    axisAccuracyAVG.set_xlabel('Detection type', fontweight ='bold', fontsize = 15)
    axisAccuracyAVG.set_ylabel('Average accuracy (%)', fontweight ='bold', fontsize = 15)
    axisAccuracyAVG.set_title('Average accuracy of detections over 500 ear images', fontweight ='bold', fontsize = 20)
    figureAccuracyAVG.show()

    # Figure for the average IoUs
    figureIntersectionAVG = plt.figure()
    axisIntersectionAVG = figureIntersectionAVG.add_subplot(111)
    # Data for average IoUs of VJ (SF = 1.01, N = 1) in percent
    intersectionAvg1011 = [0.26303763605472513, 0.26291112261105315, 0.2628253452677661, 0.262671259468951, 0.2625107702384043, 0.26183146774520705, 0.2611737042933592, 0.2608748566148288, 0.26071187129448303, 0.26014276661233354, 0.2597296588187378, 0.25903855108688695, 0.258788551086887, 0.25797548352330385, 0.25681614588238927, 0.25588538905932456, 0.2555628084141633, 0.2555628084141633, 0.2555628084141633, 0.2544035673807019, 0.2531786362844217, 0.2523138968585272, 0.2523138968585272, 0.2518391360929769, 0.2518391360929769, 0.2508235271557993, 0.2492433162710331, 0.2492433162710331, 0.24810299952671988, 0.24750748295751912, 0.24568021958253036, 0.24568021958253036, 0.2450242481030295, 0.2450242481030295, 0.24433194041072182, 0.24433194041072182, 0.24360500832641263, 0.24360500832641263, 0.24051292593931545, 0.24051292593931545, 0.2396933877900093, 0.23886209266697994, 0.23629499469314963, 0.2336686301059688, 0.23278376869871933, 0.23187933698331384, 0.23001537426271446, 0.22810562212026686, 0.22519348830631977, 0.22420015093502965, 0.22319107425271356, 0.22112635172961503, 0.21902389378543333, 0.21260269819614186, 0.2082281266967643, 0.20375578228805735, 0.1992261120485579, 0.1969327264709987, 0.18758187746158345, 0.18282789609364525, 0.16829115404586215, 0.1633733892478044, 0.15839285327593358, 0.14949683602945518, 0.14303300769269664, 0.13386015776294727, 0.12986563281553765, 0.12041673577822556, 0.1176772795645416, 0.11350876985635452, 0.09658181720780352, 0.0851168744499631, 0.0749646889278549, 0.06763723573001888, 0.05720076322374633, 0.0526684591587919, 0.04808112889947541, 0.04343976307514969, 0.04187303339651075, 0.03711619490583165, 0.03390523630729715, 0.03064791196917455, 0.024039335301675166, 0.01567235823162822, 0.01567235823162822, 0.010547198552584664, 0.005368129819556156, 0.003612463944313333, 0.003612463944313333, 0.001819620253164557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1011 = [i * 100 for i in intersectionAvg1011]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1011, label = "SF=1.01, N=1")
    # Data for average IoUs of VJ (SF = 1.01, N = 3) in percent
    intersectionAvg1013 = [0.29530125961337833, 0.2952141284090886, 0.2952141284090886, 0.2952141284090886, 0.2951336736019499, 0.2950177306420321, 0.2944889844811614, 0.294348469258679, 0.2940207042832209, 0.2940207042832209, 0.2940207042832209, 0.2933192557593626, 0.2930692557593626, 0.29252391546850676, 0.29193704330073794, 0.29193704330073794, 0.29193704330073794, 0.29193704330073794, 0.29193704330073794, 0.29077780226727656, 0.28955287117099643, 0.28868813174510183, 0.28868813174510183, 0.2882133709795516, 0.2877262334330832, 0.28722161677160374, 0.2856414058868375, 0.2856414058868375, 0.2845010891425243, 0.2845010891425243, 0.2826738257675356, 0.2826738257675356, 0.2820178542880347, 0.2820178542880347, 0.28133318956500264, 0.28133318956500264, 0.2798761332027309, 0.2791324966176622, 0.27758393905969286, 0.27758393905969286, 0.27677289991578974, 0.27677289991578974, 0.2742058019419594, 0.2715794373547786, 0.27069457594752905, 0.26979014423212355, 0.2679261815115242, 0.2660164293690766, 0.2631042955551295, 0.2611239451968264, 0.2590983921992135, 0.2570386398112773, 0.2528356439912286, 0.24640691276503435, 0.24093702256646993, 0.2353642317291915, 0.23083456148969203, 0.22739993077594606, 0.21921524228713818, 0.21327416414500638, 0.1975365861515597, 0.192618821353502, 0.1876382853816312, 0.18001813020411836, 0.17356908253138773, 0.16439623260163835, 0.16040170765422873, 0.14691994276350204, 0.14143333979952172, 0.13448546098839137, 0.11614340676835702, 0.10467095178964561, 0.09742479907067927, 0.08862727810175891, 0.07668171537807357, 0.07064549409934422, 0.06605816384002773, 0.06140790547594182, 0.056704038226270764, 0.048768303219904885, 0.043949127890200404, 0.03905482533553096, 0.02914056503762909, 0.019103699455588374, 0.019103699455588374, 0.012276721594726635, 0.005364908078391546, 0.003612463944313333, 0.003612463944313333, 0.001819620253164557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1013 = [i * 100 for i in intersectionAvg1013]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1013, label = "SF=1.01, N=3")
    # Data for average IoUs of VJ (SF = 1.01, N = 5) in percent
    intersectionAvg1015 = [0.29354943124349514, 0.29347143007024357, 0.29347143007024357, 0.2934038861731188, 0.29332343136598, 0.2932074884060622, 0.2929481893590361, 0.2929481893590361, 0.29262042438357805, 0.29262042438357805, 0.29262042438357805, 0.29215790651970297, 0.29215790651970297, 0.2918820577542709, 0.29159090868594784, 0.29159090868594784, 0.29159090868594784, 0.29159090868594784, 0.29159090868594784, 0.2912042420192812, 0.2899793109230011, 0.28954861258907694, 0.28954861258907694, 0.2890738518235267, 0.288577968046287, 0.28807335138480755, 0.2870135445404453, 0.2870135445404453, 0.2864419785072483, 0.2864419785072483, 0.2846147151322595, 0.2846147151322595, 0.28395874365275864, 0.28395874365275864, 0.28395874365275864, 0.28395874365275864, 0.2832318115684495, 0.28248464710720184, 0.2809360895492326, 0.2809360895492326, 0.2801250504053294, 0.27846197282097523, 0.27589487484714487, 0.2732685102599641, 0.2723836488527146, 0.2714792171373091, 0.2705487358538866, 0.268638983711439, 0.26572684989749185, 0.26374649953918866, 0.26273742285687257, 0.2606836054591831, 0.2575391264409885, 0.2500328441943861, 0.24566171105796852, 0.2400889202206901, 0.23442244928188993, 0.2298303632574698, 0.22164567476866193, 0.2157045966265302, 0.19754942494010766, 0.19139693345394704, 0.18641639748207622, 0.18007350294286126, 0.17492262840547118, 0.1657497784757218, 0.16175525352831222, 0.14962270283151652, 0.14277011469566472, 0.13443493294461106, 0.11749989768383451, 0.10459920830980486, 0.09590672790722268, 0.09003493779817302, 0.07958570160509994, 0.0720459267596425, 0.06745859650032601, 0.061254187848539976, 0.054982860281408606, 0.047047125275042734, 0.042227949945338246, 0.0373336473906688, 0.027419387092766936, 0.017382521510726216, 0.017382521510726216, 0.010555543649864479, 0.005364908078391546, 0.003612463944313333, 0.003612463944313333, 0.001819620253164557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1015 = [i * 100 for i in intersectionAvg1015]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1015, label = "SF=1.01, N=5")
    # Data for average IoUs of VJ (SF = 1.03, N = 1) in percent
    intersectionAvg1031 = [0.26943985606229687, 0.26941777814021894, 0.2693098353436402, 0.2689570384103949, 0.2688742701961713, 0.2688742701961713, 0.2686191067214515, 0.26847806406742303, 0.26847806406742303, 0.2682969478863068, 0.2678837826202004, 0.26697760053117, 0.26697760053117, 0.26697760053117, 0.266102873495374, 0.266102873495374, 0.2657809488921994, 0.26543695206380136, 0.2650695541187861, 0.26468223017512404, 0.26386281047112775, 0.26386281047112775, 0.26386281047112775, 0.26386281047112775, 0.26337119682161936, 0.2618345154543062, 0.26129848414763446, 0.26129848414763446, 0.26129848414763446, 0.26071170117897685, 0.2600919828691177, 0.2594686062457411, 0.25881263476624017, 0.25881263476624017, 0.25812449917301983, 0.25812449917301983, 0.2573896575440605, 0.25588254209384037, 0.25588254209384037, 0.25509853758806733, 0.25509853758806733, 0.25176680240489646, 0.25008395590892335, 0.25008395590892335, 0.25008395590892335, 0.2482623061561261, 0.24640312423960145, 0.24354023796710403, 0.24256635287268857, 0.24157007380292114, 0.23955802276163066, 0.23646642859123954, 0.23227434360813395, 0.22582599411174178, 0.22146161095855113, 0.21701291700989567, 0.21361996963755106, 0.2090164521264279, 0.1996455402324374, 0.1912952052700797, 0.17682321702972267, 0.17066505798271392, 0.15943456951223844, 0.1518124255826449, 0.1427698774910205, 0.13754185357597903, 0.13754185357597903, 0.1334960056229804, 0.12526920019272866, 0.12250175120188275, 0.10839009719450568, 0.10122160340787695, 0.09253653110113788, 0.07783275745499103, 0.07184805879290321, 0.06581166439035772, 0.059705077867240025, 0.05350502662059308, 0.047224130783551393, 0.04404102151956786, 0.04082203298838776, 0.034311923738469655, 0.027703821549575226, 0.022681631481682087, 0.020984711625222755, 0.019275672077200153, 0.008921483842523495, 0.005421113549238281, 0.003644985495020339, 0.003644985495020339, 0.0018309640734039802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1031 = [i * 100 for i in intersectionAvg1031]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1031, label = "SF=1.03, N=1")
    # Data for average IoUs of VJ (SF = 1.03, N = 3) in percent
    intersectionAvg1033 = [0.27311694244219437, 0.2730878158887199, 0.2730878158887199, 0.2729411647311938, 0.2729411647311938, 0.27283266680320284, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.2727059719821315, 0.27191982566359213, 0.27151196214534556, 0.27151196214534556, 0.27151196214534556, 0.27151196214534556, 0.27151196214534556, 0.26997528077803234, 0.26997528077803234, 0.26941670488195346, 0.26941670488195346, 0.2688299219132959, 0.2688299219132959, 0.2688299219132959, 0.268173950433795, 0.2674997013171872, 0.2674997013171872, 0.2667919321824518, 0.26532686742976025, 0.26532686742976025, 0.26532686742976025, 0.26454286292398715, 0.26454286292398715, 0.2620424228638456, 0.26035957636787255, 0.26035957636787255, 0.26035957636787255, 0.25853792661507524, 0.25667874469855056, 0.25381807247241106, 0.25284418737799563, 0.25184790830822823, 0.24983585726693774, 0.24674426309654662, 0.24359342427403782, 0.23714507477764563, 0.2316897825335459, 0.22612127291668768, 0.22159128003201153, 0.21698776252088828, 0.20528972582566157, 0.19694636468940033, 0.18487232224317904, 0.17747687506057708, 0.16748873220504704, 0.158595159704025, 0.15083838797393012, 0.1429845224229832, 0.1429845224229832, 0.13893867446998454, 0.1307118690397328, 0.12377395502700732, 0.10824771686937987, 0.10107922308275112, 0.09239415077601204, 0.07622501878659294, 0.0702403201245051, 0.06722805742551813, 0.06112147090240043, 0.05337058091462626, 0.04550165847850844, 0.042318549214524916, 0.03909956068334481, 0.03585575169955118, 0.02760315228183648, 0.02424768773702977, 0.01916961856636811, 0.014044482389609873, 0.007145355788305554, 0.003644985495020339, 0.003644985495020339, 0.003644985495020339, 0.0018309640734039802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1033 = [i * 100 for i in intersectionAvg1033]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1033, label = "SF=1.03, N=3")
    # Data for average IoUs of VJ (SF = 1.03, N = 5) in percent
    intersectionAvg1035 = [0.2665998092478368, 0.26657068269436235, 0.26657068269436235, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2664995928494442, 0.2661007704745668, 0.2656929069563203, 0.2656929069563203, 0.2656929069563203, 0.2656929069563203, 0.2656929069563203, 0.26467412163631493, 0.26467412163631493, 0.264115545740236, 0.264115545740236, 0.26352876277157844, 0.26352876277157844, 0.26352876277157844, 0.26352876277157844, 0.2628545136549706, 0.2628545136549706, 0.2628545136549706, 0.2621196720260114, 0.2613679237742631, 0.2613679237742631, 0.2605839192684901, 0.2605839192684901, 0.25808347920834857, 0.2564006327123755, 0.2564006327123755, 0.2564006327123755, 0.25457898295957815, 0.2527198010430535, 0.249859128816914, 0.24888524372249857, 0.24888524372249857, 0.24687319268120808, 0.24276008128969628, 0.23960924246718748, 0.23208281091650895, 0.22554567695226962, 0.2188752775243925, 0.21548041977485147, 0.21087690226372827, 0.19917886556850156, 0.19203102925697865, 0.17995698681075734, 0.17256153962815537, 0.16133289590906755, 0.15371415637018349, 0.14725342852306736, 0.1393995629721205, 0.1393995629721205, 0.1353537150191218, 0.12576073553304087, 0.11882282152031531, 0.10329658336268789, 0.09756423241385431, 0.08743466900598143, 0.07126553701656234, 0.06528083835447446, 0.06225504887691829, 0.057668666212555605, 0.049917776224781434, 0.040471778689849386, 0.03728866942586585, 0.034069680894685754, 0.030825871910892123, 0.02422844490697053, 0.022549420750070267, 0.01916961856636811, 0.014044482389609873, 0.007145355788305554, 0.003644985495020339, 0.003644985495020339, 0.003644985495020339, 0.0018309640734039802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1035 = [i * 100 for i in intersectionAvg1035]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1035, label = "SF=1.03, N=5")
    # Data for average IoUs of VJ (SF = 1.05, N = 1) in percent
    intersectionAvg1051 = [0.2883871964191028, 0.28831154750800214, 0.28826182626554, 0.28812791687013733, 0.288042424642158, 0.288042424642158, 0.2877749637226066, 0.2877749637226066, 0.2877749637226066, 0.2877749637226066, 0.2873499828211551, 0.2868819154965831, 0.2866276566610886, 0.2866276566610886, 0.2866276566610886, 0.2863078272367815, 0.2863078272367815, 0.2863078272367815, 0.2863078272367815, 0.2859267026934154, 0.2859267026934154, 0.2854981557924825, 0.2846030354918394, 0.2846030354918394, 0.2846030354918394, 0.28408449482198295, 0.28408449482198295, 0.28353672015656123, 0.2818425675013578, 0.2818425675013578, 0.28122515627569916, 0.28059754792898967, 0.28059754792898967, 0.28059754792898967, 0.28059754792898967, 0.27916888572577847, 0.27916888572577847, 0.27916888572577847, 0.27763917801960014, 0.2744907999130193, 0.27367378633835865, 0.27201785101187664, 0.27201785101187664, 0.27026969101349924, 0.26848725453186517, 0.26848725453186517, 0.26755677324844274, 0.266597047385057, 0.2636848317269167, 0.2636848317269167, 0.2616580024852364, 0.2575083150862738, 0.2554129839204945, 0.24685906297720422, 0.24031435190861, 0.23585383898993356, 0.2302128942069949, 0.22560303176145438, 0.21625397645520283, 0.21030356569155115, 0.20183107431308056, 0.19200687719925186, 0.18577435780985702, 0.1781780259761833, 0.1639611954155858, 0.16003888060514077, 0.1573733104297022, 0.15197870914511416, 0.1450967721561903, 0.14369701225222872, 0.1338233822894194, 0.12382183276494525, 0.10643768628146819, 0.09468430454106389, 0.08726354901996704, 0.07669646008246006, 0.07059099203764126, 0.06284171912586184, 0.05496012836614548, 0.04542551446468542, 0.042202211081074234, 0.038953550381509654, 0.027377691280475427, 0.01902115552403779, 0.015638684578278664, 0.008795611259106186, 0.0036031688800915456, 0.0036031688800915456, 0.0018309640734039802, 0.0018309640734039802, 0.0018309640734039802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1051 = [i * 100 for i in intersectionAvg1051]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1051, label = "SF=1.05, N=1")
    # Data for average IoUs of VJ (SF = 1.05, N = 3) in percent
    intersectionAvg1053 = [0.2499351317078491, 0.24990600515437456, 0.24990600515437456, 0.24975801585474788, 0.24975801585474788, 0.24975801585474788, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24962609995889318, 0.24924497541552706, 0.24883391158573984, 0.24883391158573984, 0.24839029576653082, 0.24839029576653082, 0.24839029576653082, 0.24787175509667436, 0.24787175509667436, 0.24787175509667436, 0.24731005583841403, 0.24731005583841403, 0.24731005583841403, 0.24731005583841403, 0.24731005583841403, 0.24731005583841403, 0.24731005583841403, 0.24589921688522423, 0.24589921688522423, 0.2451459212166743, 0.24438015545090855, 0.24122729047386957, 0.23960099438470503, 0.23794505905822308, 0.23794505905822308, 0.23707085863178384, 0.23528842215014986, 0.23528842215014986, 0.23528842215014986, 0.234328696286764, 0.2324002227810584, 0.2324002227810584, 0.23037339353937814, 0.2251862723416673, 0.2220393506189652, 0.21347969200349934, 0.2091150674622698, 0.20466859200952614, 0.20128766058628195, 0.19667779814074146, 0.18732874283448991, 0.18137833207083814, 0.1753198786171911, 0.16549992714731415, 0.15800048761768762, 0.15040415578401387, 0.13748716521459192, 0.13356485040414698, 0.12955980467945252, 0.12281372687606652, 0.1186859014259658, 0.11728614152200421, 0.11023362629293186, 0.10167082822482101, 0.08574334302742828, 0.0754687020835919, 0.06952606447522261, 0.05594463233714474, 0.05290222162285902, 0.048257032249315775, 0.04510184946269276, 0.03874687792027715, 0.03874687792027715, 0.03549821722071257, 0.023931535947901993, 0.015575000191464355, 0.012192529245705226, 0.00706120909569108, 0.0036031688800915456, 0.0036031688800915456, 0.0018309640734039802, 0.0018309640734039802, 0.0018309640734039802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1053 = [i * 100 for i in intersectionAvg1053]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1053, label = "SF=1.05, N=3")
    # Data for average IoUs of VJ (SF = 1.05, N = 5) in percent
    intersectionAvg1055 = [0.2352669483682159, 0.23523782181474137, 0.23523782181474137, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.2351653648574209, 0.23472174903821189, 0.23472174903821189, 0.23472174903821189, 0.23420320836835543, 0.23420320836835543, 0.23420320836835543, 0.23364150911009512, 0.23364150911009512, 0.2330229524090642, 0.2330229524090642, 0.2330229524090642, 0.2330229524090642, 0.2330229524090642, 0.23161211345587435, 0.23161211345587435, 0.23161211345587435, 0.2308463476901086, 0.2284899668239554, 0.22767295324929473, 0.2268396199159614, 0.2268396199159614, 0.22596541948952217, 0.22418298300788808, 0.22418298300788808, 0.22418298300788808, 0.22322325714450222, 0.22129478363879662, 0.22129478363879662, 0.21926795439711627, 0.21511851877230237, 0.21197159704960028, 0.20341193843413446, 0.19904731389290486, 0.19460083844016124, 0.19121990701691705, 0.18661004457137653, 0.17726098926512499, 0.1713105785014733, 0.16525212504782616, 0.15790079881530913, 0.15165473771553167, 0.1440584058818578, 0.13114141531243595, 0.127219100501991, 0.12454738811062986, 0.11780131030724385, 0.11367348485714313, 0.10949838638609542, 0.10385327099349077, 0.09672153243191113, 0.08224576194101957, 0.07049283933146318, 0.06455020172309389, 0.05247541655695103, 0.04943300584266532, 0.044787816469122076, 0.04163263368249905, 0.03369568175931986, 0.03369568175931986, 0.03044702105975528, 0.020537624043053582, 0.013856721283188522, 0.010474250337429393, 0.00706120909569108, 0.0036031688800915456, 0.0036031688800915456, 0.0018309640734039802, 0.0018309640734039802, 0.0018309640734039802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    intersectionAvg1055 = [i * 100 for i in intersectionAvg1055]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvg1055, label = "SF=1.05, N=5")
    # Data for average IoUs of YOLOv5 in percent
    intersectionAvgYOLOV5 = [0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8211801730574616, 0.8190911325457346, 0.8169530594303096, 0.8169530594303096, 0.8169530594303096, 0.8169530594303096, 0.8169530594303096, 0.8169530594303096, 0.8145845850105927, 0.8145845850105927, 0.813350901176331, 0.807091001341459, 0.807091001341459, 0.8045069435181037, 0.7992568761194857, 0.7952596796848959, 0.7925573030779507, 0.7870887246258839, 0.7815382375243534, 0.7787039250509604, 0.7715508611600569, 0.7584983420582405, 0.7423205066420637, 0.7229150705546539, 0.7047909377248417, 0.6818697220411133, 0.6725323205799496, 0.6505384841168482, 0.6314323504123259, 0.6120838830120233, 0.5631610691528472, 0.5318416931751203, 0.486732026547659, 0.4377283694560233, 0.38643546918289506, 0.3327929175450296, 0.2803014650763354, 0.23251943366051672, 0.19494939169589057, 0.15155493738008025, 0.11862148633660625, 0.08162441463812582, 0.051692512531081015, 0.03278523610499575, 0.01942830617701893, 0.011729960109915767, 0.003938282647584973, 0.0, 0.0]
    intersectionAvgYOLOV5 = [i * 100 for i in intersectionAvgYOLOV5]
    axisIntersectionAVG.plot(thresholdNumber, intersectionAvgYOLOV5, color = "black", label = "YOLOv5", linestyle = (0, (5, 1)), linewidth = 2.2)
    # Draw the figure for the average IoUs
    axisIntersectionAVG.set_ylim(0, 100)
    axisIntersectionAVG.set_yticks(percentageNumbers, labels = percentageNumbersLabels)
    axisIntersectionAVG.set_xlim(0.01, 1)
    axisIntersectionAVG.set_xticks(normalizedNumbers, labels = normalizedNumbersLabels)
    axisIntersectionAVG.set_xlabel('Threshholds (step 0.01)', fontweight ='bold', fontsize = 15)
    axisIntersectionAVG.set_ylabel('IoU (%)', fontweight ='bold', fontsize = 15)
    axisIntersectionAVG.set_title('Average IoU for each threshold (0.01 - 1.00) over 500 ear images', fontweight ='bold', fontsize = 20)
    axisIntersectionAVG.legend()
    figureIntersectionAVG.show()


    # Figure for the PR curve
    figurePR = plt.figure()
    axisPR = figurePR.add_subplot(111)
    # Data for precisions and recalls of VJ (SF = 1.01, N = 1) in percent
    precisions1011 = [0.17477724468814257, 0.17135023989033585, 0.16997943797121315, 0.16860863605209048, 0.16723783413296778, 0.16312542837559973, 0.15969842357779301, 0.15832762165867031, 0.157642220699109, 0.15558601782042494, 0.15421521590130227, 0.15215901302261822, 0.1514736120630569, 0.14941740918437285, 0.14667580534612748, 0.14461960246744346, 0.1439342015078821, 0.1439342015078821, 0.1439342015078821, 0.1418779986291981, 0.13982179575051404, 0.13845099383139137, 0.13845099383139137, 0.13776559287183002, 0.13776559287183002, 0.13639479095270735, 0.1343385880740233, 0.1343385880740233, 0.13296778615490062, 0.13228238519533927, 0.13022618231665525, 0.13022618231665525, 0.1295407813570939, 0.1295407813570939, 0.12885538039753255, 0.12885538039753255, 0.1281699794379712, 0.1281699794379712, 0.12542837559972583, 0.12542837559972583, 0.1247429746401645, 0.12405757368060315, 0.12200137080191913, 0.11994516792323509, 0.11925976696367376, 0.1185743660041124, 0.11720356408498972, 0.11583276216586703, 0.113776559287183, 0.11309115832762166, 0.11240575736806031, 0.11103495544893763, 0.10966415352981494, 0.10555174777244689, 0.10281014393420151, 0.10006854009595613, 0.09732693625771076, 0.09595613433858807, 0.09047292666209733, 0.08773132282385196, 0.07950651130911583, 0.07676490747087046, 0.07402330363262509, 0.06922549691569568, 0.06579849211788896, 0.06100068540095956, 0.05894448252227553, 0.05414667580534613, 0.05277587388622344, 0.05071967100753941, 0.04249485949280329, 0.037011651816312545, 0.03221384509938314, 0.02878684030157642, 0.023989033584647018, 0.02193283070596299, 0.019876627827278958, 0.01782042494859493, 0.017135023989033583, 0.015078821110349555, 0.013708019191226868, 0.01233721727210418, 0.009595613433858808, 0.00616860863605209, 0.00616860863605209, 0.00411240575736806, 0.00205620287868403, 0.0013708019191226869, 0.0013708019191226869, 0.0006854009595613434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1011 = [i * 100 for i in precisions1011]
    recalls1011 = [0.51, 0.5, 0.496, 0.492, 0.488, 0.476, 0.466, 0.462, 0.46, 0.454, 0.45, 0.444, 0.442, 0.436, 0.428, 0.422, 0.42, 0.42, 0.42, 0.414, 0.408, 0.404, 0.404, 0.402, 0.402, 0.398, 0.392, 0.392, 0.388, 0.386, 0.38, 0.38, 0.378, 0.378, 0.376, 0.376, 0.374, 0.374, 0.366, 0.366, 0.364, 0.362, 0.356, 0.35, 0.348, 0.346, 0.342, 0.338, 0.332, 0.33, 0.328, 0.324, 0.32, 0.308, 0.3, 0.292, 0.284, 0.28, 0.264, 0.256, 0.232, 0.224, 0.216, 0.202, 0.192, 0.178, 0.172, 0.158, 0.154, 0.148, 0.124, 0.108, 0.094, 0.084, 0.07, 0.064, 0.058, 0.052, 0.05, 0.044, 0.04, 0.036, 0.028, 0.018, 0.018, 0.012, 0.006, 0.004, 0.004, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1011 = [i * 100 for i in recalls1011]
    axisPR.plot(recalls1011, precisions1011, label = "SF=1.01, N=1")
    # Data for precisions and recalls of VJ (SF = 1.01, N = 3) in percent
    precisions1013 = [0.29698375870069604, 0.2923433874709977, 0.2923433874709977, 0.2923433874709977, 0.29118329466357307, 0.2900232018561485, 0.2853828306264501, 0.2842227378190255, 0.2819025522041763, 0.2819025522041763, 0.2819025522041763, 0.27842227378190254, 0.27726218097447797, 0.27494199535962877, 0.27262180974477956, 0.27262180974477956, 0.27262180974477956, 0.27262180974477956, 0.27262180974477956, 0.2691415313225058, 0.265661252900232, 0.2633410672853828, 0.2633410672853828, 0.26218097447795824, 0.26102088167053367, 0.25986078886310904, 0.25638051044083526, 0.25638051044083526, 0.25406032482598606, 0.25406032482598606, 0.2505800464037123, 0.2505800464037123, 0.2494199535962877, 0.2494199535962877, 0.2482598607888631, 0.2482598607888631, 0.2459396751740139, 0.24477958236658934, 0.24245939675174014, 0.24245939675174014, 0.24129930394431554, 0.24129930394431554, 0.23781902552204176, 0.23433874709976799, 0.23317865429234338, 0.23201856148491878, 0.2296983758700696, 0.2273781902552204, 0.22389791183294663, 0.22157772621809746, 0.21925754060324826, 0.21693735498839908, 0.2122969837587007, 0.20533642691415313, 0.19953596287703015, 0.1937354988399072, 0.18909512761020883, 0.18561484918793503, 0.17749419953596288, 0.1716937354988399, 0.15661252900232017, 0.1519721577726218, 0.14733178654292342, 0.14037122969837587, 0.1345707656612529, 0.12645011600928074, 0.12296983758700696, 0.11136890951276102, 0.10672853828306264, 0.10092807424593968, 0.08584686774941995, 0.0765661252900232, 0.07076566125290024, 0.06380510440835267, 0.054524361948955914, 0.04988399071925754, 0.04640371229698376, 0.042923433874709975, 0.03944315545243619, 0.033642691415313224, 0.030162412993039442, 0.02668213457076566, 0.019721577726218097, 0.012761020881670533, 0.012761020881670533, 0.008120649651972157, 0.0034802784222737818, 0.002320185614849188, 0.002320185614849188, 0.001160092807424594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1013 = [i * 100 for i in precisions1013]
    recalls1013 = [0.512, 0.504, 0.504, 0.504, 0.502, 0.5, 0.492, 0.49, 0.486, 0.486, 0.486, 0.48, 0.478, 0.474, 0.47, 0.47, 0.47, 0.47, 0.47, 0.464, 0.458, 0.454, 0.454, 0.452, 0.45, 0.448, 0.442, 0.442, 0.438, 0.438, 0.432, 0.432, 0.43, 0.43, 0.428, 0.428, 0.424, 0.422, 0.418, 0.418, 0.416, 0.416, 0.41, 0.404, 0.402, 0.4, 0.396, 0.392, 0.386, 0.382, 0.378, 0.374, 0.366, 0.354, 0.344, 0.334, 0.326, 0.32, 0.306, 0.296, 0.27, 0.262, 0.254, 0.242, 0.232, 0.218, 0.212, 0.192, 0.184, 0.174, 0.148, 0.132, 0.122, 0.11, 0.094, 0.086, 0.08, 0.074, 0.068, 0.058, 0.052, 0.046, 0.034, 0.022, 0.022, 0.014, 0.006, 0.004, 0.004, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1013 = [i * 100 for i in recalls1013]
    axisPR.plot(recalls1013, precisions1013, label = "SF=1.01, N=3")
    # Data for precisions and recalls of VJ (SF = 1.01, N = 5) in percent
    precisions1015 = [0.37519142419601836, 0.37059724349157736, 0.37059724349157736, 0.36906584992343033, 0.3675344563552833, 0.3660030627871363, 0.36294027565084225, 0.36294027565084225, 0.35987748851454826, 0.35987748851454826, 0.35987748851454826, 0.3568147013782542, 0.3568147013782542, 0.3552833078101072, 0.3537519142419602, 0.3537519142419602, 0.3537519142419602, 0.3537519142419602, 0.3537519142419602, 0.35222052067381315, 0.34762633996937214, 0.3460949464012251, 0.3460949464012251, 0.3445635528330781, 0.3430321592649311, 0.34150076569678406, 0.33843797856049007, 0.33843797856049007, 0.33690658499234305, 0.33690658499234305, 0.332312404287902, 0.332312404287902, 0.33078101071975496, 0.33078101071975496, 0.33078101071975496, 0.33078101071975496, 0.32924961715160794, 0.327718223583461, 0.32465543644716693, 0.32465543644716693, 0.3231240428790199, 0.32006125574272587, 0.31546707503828486, 0.3108728943338438, 0.3093415007656968, 0.30781010719754975, 0.30627871362940273, 0.30321592649310875, 0.2986217457886677, 0.29555895865237364, 0.29402756508422667, 0.29096477794793263, 0.28637059724349156, 0.27565084226646247, 0.26952526799387444, 0.26186830015313933, 0.2542113323124043, 0.24808575803981622, 0.23736600306278713, 0.22970903522205208, 0.20673813169984687, 0.1990811638591118, 0.19295558958652373, 0.18529862174578868, 0.17917304747320062, 0.16845329249617153, 0.1638591117917305, 0.15007656967840735, 0.14241960183767227, 0.1332312404287902, 0.11485451761102604, 0.10107197549770292, 0.09188361408882083, 0.08575803981623277, 0.07503828483920368, 0.06738131699846861, 0.06278713629402756, 0.05666156202143951, 0.05053598774885146, 0.042879019908116385, 0.03828483920367534, 0.033690658499234305, 0.02450229709035222, 0.015313935681470138, 0.015313935681470138, 0.009188361408882083, 0.004594180704441042, 0.0030627871362940277, 0.0030627871362940277, 0.0015313935681470138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1015 = [i * 100 for i in precisions1015]
    recalls1015 = [0.49, 0.484, 0.484, 0.482, 0.48, 0.478, 0.474, 0.474, 0.47, 0.47, 0.47, 0.466, 0.466, 0.464, 0.462, 0.462, 0.462, 0.462, 0.462, 0.46, 0.454, 0.452, 0.452, 0.45, 0.448, 0.446, 0.442, 0.442, 0.44, 0.44, 0.434, 0.434, 0.432, 0.432, 0.432, 0.432, 0.43, 0.428, 0.424, 0.424, 0.422, 0.418, 0.412, 0.406, 0.404, 0.402, 0.4, 0.396, 0.39, 0.386, 0.384, 0.38, 0.374, 0.36, 0.352, 0.342, 0.332, 0.324, 0.31, 0.3, 0.27, 0.26, 0.252, 0.242, 0.234, 0.22, 0.214, 0.196, 0.186, 0.174, 0.15, 0.132, 0.12, 0.112, 0.098, 0.088, 0.082, 0.074, 0.066, 0.056, 0.05, 0.044, 0.032, 0.02, 0.02, 0.012, 0.006, 0.004, 0.004, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1015 = [i * 100 for i in recalls1015]
    axisPR.plot(recalls1015, precisions1015, label = "SF=1.01, N=5")
    # Data for precisions and recalls of VJ (SF = 1.03, N = 1) in percent
    precisions1031 = [0.2883435582822086, 0.2871165644171779, 0.2846625766871166, 0.2785276073619632, 0.2773006134969325, 0.2773006134969325, 0.2748466257668712, 0.27361963190184047, 0.27361963190184047, 0.2723926380368098, 0.26993865030674846, 0.2650306748466258, 0.2650306748466258, 0.2650306748466258, 0.26134969325153373, 0.26134969325153373, 0.26012269938650306, 0.2588957055214724, 0.25766871165644173, 0.25644171779141106, 0.25398773006134967, 0.25398773006134967, 0.25398773006134967, 0.25398773006134967, 0.252760736196319, 0.249079754601227, 0.24785276073619633, 0.24785276073619633, 0.24785276073619633, 0.24662576687116564, 0.24539877300613497, 0.2441717791411043, 0.24294478527607363, 0.24294478527607363, 0.24171779141104294, 0.24171779141104294, 0.24049079754601227, 0.23803680981595093, 0.23803680981595093, 0.23680981595092024, 0.23680981595092024, 0.23190184049079754, 0.2294478527607362, 0.2294478527607362, 0.2294478527607362, 0.22699386503067484, 0.2245398773006135, 0.22085889570552147, 0.2196319018404908, 0.2184049079754601, 0.21595092024539878, 0.21226993865030674, 0.20736196319018405, 0.2, 0.1950920245398773, 0.1901840490797546, 0.18650306748466258, 0.18159509202453988, 0.17177914110429449, 0.16319018404907976, 0.14846625766871166, 0.1423312883435583, 0.1312883435582822, 0.12392638036809817, 0.11533742331288344, 0.11042944785276074, 0.11042944785276074, 0.1067484662576687, 0.09938650306748466, 0.09693251533742331, 0.08466257668711656, 0.0785276073619632, 0.07116564417177915, 0.05889570552147239, 0.053987730061349694, 0.049079754601226995, 0.044171779141104296, 0.0392638036809816, 0.0343558282208589, 0.03190184049079755, 0.029447852760736196, 0.024539877300613498, 0.0196319018404908, 0.015950920245398775, 0.014723926380368098, 0.013496932515337423, 0.006134969325153374, 0.0036809815950920245, 0.00245398773006135, 0.00245398773006135, 0.001226993865030675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1031 = [i * 100 for i in precisions1031]
    recalls1031 = [0.47, 0.468, 0.464, 0.454, 0.452, 0.452, 0.448, 0.446, 0.446, 0.444, 0.44, 0.432, 0.432, 0.432, 0.426, 0.426, 0.424, 0.422, 0.42, 0.418, 0.414, 0.414, 0.414, 0.414, 0.412, 0.406, 0.404, 0.404, 0.404, 0.402, 0.4, 0.398, 0.396, 0.396, 0.394, 0.394, 0.392, 0.388, 0.388, 0.386, 0.386, 0.378, 0.374, 0.374, 0.374, 0.37, 0.366, 0.36, 0.358, 0.356, 0.352, 0.346, 0.338, 0.326, 0.318, 0.31, 0.304, 0.296, 0.28, 0.266, 0.242, 0.232, 0.214, 0.202, 0.188, 0.18, 0.18, 0.174, 0.162, 0.158, 0.138, 0.128, 0.116, 0.096, 0.088, 0.08, 0.072, 0.064, 0.056, 0.052, 0.048, 0.04, 0.032, 0.026, 0.024, 0.022, 0.01, 0.006, 0.004, 0.004, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1031 = [i * 100 for i in recalls1031]
    axisPR.plot(recalls1031, precisions1031, label = "SF=1.03, N=1")
    # Data for precisions and recalls of VJ (SF = 1.03, N = 3) in percent
    precisions1033 = [0.5214285714285715, 0.5190476190476191, 0.5190476190476191, 0.5142857142857142, 0.5142857142857142, 0.5119047619047619, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5095238095238095, 0.5047619047619047, 0.5023809523809524, 0.5023809523809524, 0.5023809523809524, 0.5023809523809524, 0.5023809523809524, 0.49523809523809526, 0.49523809523809526, 0.4928571428571429, 0.4928571428571429, 0.49047619047619045, 0.49047619047619045, 0.49047619047619045, 0.4880952380952381, 0.4857142857142857, 0.4857142857142857, 0.48333333333333334, 0.4785714285714286, 0.4785714285714286, 0.4785714285714286, 0.47619047619047616, 0.47619047619047616, 0.46904761904761905, 0.4642857142857143, 0.4642857142857143, 0.4642857142857143, 0.4595238095238095, 0.45476190476190476, 0.44761904761904764, 0.4452380952380952, 0.44285714285714284, 0.4380952380952381, 0.430952380952381, 0.4238095238095238, 0.4095238095238095, 0.3976190476190476, 0.38571428571428573, 0.3761904761904762, 0.36666666666666664, 0.34285714285714286, 0.3261904761904762, 0.30238095238095236, 0.28809523809523807, 0.26904761904761904, 0.2523809523809524, 0.23809523809523808, 0.22380952380952382, 0.22380952380952382, 0.21666666666666667, 0.20238095238095238, 0.19047619047619047, 0.16428571428571428, 0.1523809523809524, 0.1380952380952381, 0.11190476190476191, 0.10238095238095238, 0.09761904761904762, 0.0880952380952381, 0.0761904761904762, 0.06428571428571428, 0.05952380952380952, 0.05476190476190476, 0.05, 0.0380952380952381, 0.03333333333333333, 0.02619047619047619, 0.01904761904761905, 0.009523809523809525, 0.004761904761904762, 0.004761904761904762, 0.004761904761904762, 0.002380952380952381, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1033 = [i * 100 for i in precisions1033]
    recalls1033 = [0.438, 0.436, 0.436, 0.432, 0.432, 0.43, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.424, 0.422, 0.422, 0.422, 0.422, 0.422, 0.416, 0.416, 0.414, 0.414, 0.412, 0.412, 0.412, 0.41, 0.408, 0.408, 0.406, 0.402, 0.402, 0.402, 0.4, 0.4, 0.394, 0.39, 0.39, 0.39, 0.386, 0.382, 0.376, 0.374, 0.372, 0.368, 0.362, 0.356, 0.344, 0.334, 0.324, 0.316, 0.308, 0.288, 0.274, 0.254, 0.242, 0.226, 0.212, 0.2, 0.188, 0.188, 0.182, 0.17, 0.16, 0.138, 0.128, 0.116, 0.094, 0.086, 0.082, 0.074, 0.064, 0.054, 0.05, 0.046, 0.042, 0.032, 0.028, 0.022, 0.016, 0.008, 0.004, 0.004, 0.004, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1033 = [i * 100 for i in recalls1033]
    axisPR.plot(recalls1033, precisions1033, label = "SF=1.03, N=3")
    # Data for precisions and recalls of VJ (SF = 1.03, N = 5) in percent
    precisions1035 = [0.6382978723404256, 0.6352583586626139, 0.6352583586626139, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6322188449848024, 0.6291793313069909, 0.6261398176291794, 0.6261398176291794, 0.6261398176291794, 0.6261398176291794, 0.6261398176291794, 0.6200607902735562, 0.6200607902735562, 0.6170212765957447, 0.6170212765957447, 0.6139817629179332, 0.6139817629179332, 0.6139817629179332, 0.6139817629179332, 0.6109422492401215, 0.6109422492401215, 0.6109422492401215, 0.60790273556231, 0.6048632218844985, 0.6048632218844985, 0.601823708206687, 0.601823708206687, 0.5927051671732523, 0.5866261398176292, 0.5866261398176292, 0.5866261398176292, 0.5805471124620061, 0.574468085106383, 0.5653495440729484, 0.5623100303951368, 0.5623100303951368, 0.5562310030395137, 0.5440729483282675, 0.5349544072948328, 0.513677811550152, 0.49544072948328266, 0.47720364741641336, 0.46808510638297873, 0.45592705167173253, 0.425531914893617, 0.4072948328267477, 0.3768996960486322, 0.3586626139817629, 0.331306990881459, 0.3130699088145897, 0.2978723404255319, 0.2796352583586626, 0.2796352583586626, 0.270516717325228, 0.24924012158054712, 0.23404255319148937, 0.2006079027355623, 0.1884498480243161, 0.16717325227963525, 0.1337386018237082, 0.12158054711246201, 0.11550151975683891, 0.10638297872340426, 0.0911854103343465, 0.0729483282674772, 0.0668693009118541, 0.060790273556231005, 0.0547112462006079, 0.0425531914893617, 0.03951367781155015, 0.03343465045592705, 0.0243161094224924, 0.0121580547112462, 0.0060790273556231, 0.0060790273556231, 0.0060790273556231, 0.00303951367781155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1035 = [i * 100 for i in precisions1035]
    recalls1035 = [0.42, 0.418, 0.418, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.416, 0.414, 0.412, 0.412, 0.412, 0.412, 0.412, 0.408, 0.408, 0.406, 0.406, 0.404, 0.404, 0.404, 0.404, 0.402, 0.402, 0.402, 0.4, 0.398, 0.398, 0.396, 0.396, 0.39, 0.386, 0.386, 0.386, 0.382, 0.378, 0.372, 0.37, 0.37, 0.366, 0.358, 0.352, 0.338, 0.326, 0.314, 0.308, 0.3, 0.28, 0.268, 0.248, 0.236, 0.218, 0.206, 0.196, 0.184, 0.184, 0.178, 0.164, 0.154, 0.132, 0.124, 0.11, 0.088, 0.08, 0.076, 0.07, 0.06, 0.048, 0.044, 0.04, 0.036, 0.028, 0.026, 0.022, 0.016, 0.008, 0.004, 0.004, 0.004, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1035 = [i * 100 for i in recalls1035]
    axisPR.plot(recalls1035, precisions1035, label = "SF=1.03, N=5")
    # Data for precisions and recalls of VJ (SF = 1.05, N = 1) in percent
    precisions1051 = [0.39700996677740863, 0.3920265780730897, 0.3903654485049834, 0.38704318936877075, 0.3853820598006645, 0.3853820598006645, 0.38205980066445183, 0.38205980066445183, 0.38205980066445183, 0.38205980066445183, 0.3787375415282392, 0.3754152823920266, 0.37375415282392027, 0.37375415282392027, 0.37375415282392027, 0.37209302325581395, 0.37209302325581395, 0.37209302325581395, 0.37209302325581395, 0.3704318936877076, 0.3704318936877076, 0.3687707641196013, 0.3654485049833887, 0.3654485049833887, 0.3654485049833887, 0.3637873754152824, 0.3637873754152824, 0.36212624584717606, 0.35714285714285715, 0.35714285714285715, 0.3554817275747508, 0.3538205980066445, 0.3538205980066445, 0.3538205980066445, 0.3538205980066445, 0.3504983388704319, 0.3504983388704319, 0.3504983388704319, 0.34717607973421927, 0.34053156146179403, 0.3388704318936877, 0.33554817275747506, 0.33554817275747506, 0.33222591362126247, 0.3289036544850498, 0.3289036544850498, 0.3272425249169435, 0.32558139534883723, 0.32059800664451826, 0.32059800664451826, 0.31727574750830567, 0.3106312292358804, 0.3073089700996678, 0.29401993355481726, 0.2840531561461794, 0.27740863787375414, 0.2691029900332226, 0.26245847176079734, 0.24916943521594684, 0.24086378737541528, 0.2292358803986711, 0.2159468438538206, 0.20764119601328904, 0.19767441860465115, 0.17940199335548174, 0.1744186046511628, 0.17109634551495018, 0.1644518272425249, 0.15614617940199335, 0.15448504983388706, 0.14285714285714285, 0.13122923588039867, 0.11129568106312292, 0.09800664451827243, 0.08970099667774087, 0.07807308970099668, 0.07142857142857142, 0.06312292358803986, 0.054817275747508304, 0.044850498338870434, 0.04152823920265781, 0.03820598006644518, 0.026578073089700997, 0.018272425249169437, 0.014950166112956811, 0.008305647840531562, 0.0033222591362126247, 0.0033222591362126247, 0.0016611295681063123, 0.0016611295681063123, 0.0016611295681063123, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1051 = [i * 100 for i in precisions1051]
    recalls1051 = [0.478, 0.472, 0.47, 0.466, 0.464, 0.464, 0.46, 0.46, 0.46, 0.46, 0.456, 0.452, 0.45, 0.45, 0.45, 0.448, 0.448, 0.448, 0.448, 0.446, 0.446, 0.444, 0.44, 0.44, 0.44, 0.438, 0.438, 0.436, 0.43, 0.43, 0.428, 0.426, 0.426, 0.426, 0.426, 0.422, 0.422, 0.422, 0.418, 0.41, 0.408, 0.404, 0.404, 0.4, 0.396, 0.396, 0.394, 0.392, 0.386, 0.386, 0.382, 0.374, 0.37, 0.354, 0.342, 0.334, 0.324, 0.316, 0.3, 0.29, 0.276, 0.26, 0.25, 0.238, 0.216, 0.21, 0.206, 0.198, 0.188, 0.186, 0.172, 0.158, 0.134, 0.118, 0.108, 0.094, 0.086, 0.076, 0.066, 0.054, 0.05, 0.046, 0.032, 0.022, 0.018, 0.01, 0.004, 0.004, 0.002, 0.002, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1051 = [i * 100 for i in recalls1051]
    axisPR.plot(recalls1051, precisions1051, label = "SF=1.05, N=1")
    # Data for precisions and recalls of VJ (SF = 1.05, N = 3) in percent
    precisions1053 = [0.6378205128205128, 0.6346153846153846, 0.6346153846153846, 0.6282051282051282, 0.6282051282051282, 0.6282051282051282, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.6217948717948718, 0.6185897435897436, 0.6185897435897436, 0.6153846153846154, 0.6153846153846154, 0.6153846153846154, 0.6121794871794872, 0.6121794871794872, 0.6121794871794872, 0.6089743589743589, 0.6089743589743589, 0.6089743589743589, 0.6089743589743589, 0.6089743589743589, 0.6089743589743589, 0.6089743589743589, 0.6025641025641025, 0.6025641025641025, 0.5993589743589743, 0.5961538461538461, 0.5833333333333334, 0.5769230769230769, 0.5705128205128205, 0.5705128205128205, 0.5673076923076923, 0.5608974358974359, 0.5608974358974359, 0.5608974358974359, 0.5576923076923077, 0.5512820512820513, 0.5512820512820513, 0.5448717948717948, 0.5288461538461539, 0.5192307692307693, 0.4935897435897436, 0.4807692307692308, 0.46794871794871795, 0.4583333333333333, 0.44551282051282054, 0.4198717948717949, 0.40384615384615385, 0.38782051282051283, 0.36217948717948717, 0.34294871794871795, 0.32371794871794873, 0.2916666666666667, 0.28205128205128205, 0.2724358974358974, 0.2564102564102564, 0.2467948717948718, 0.24358974358974358, 0.22756410256410256, 0.20833333333333334, 0.17307692307692307, 0.15064102564102563, 0.13782051282051283, 0.10897435897435898, 0.10256410256410256, 0.09294871794871795, 0.08653846153846154, 0.07371794871794872, 0.07371794871794872, 0.0673076923076923, 0.04487179487179487, 0.028846153846153848, 0.022435897435897436, 0.01282051282051282, 0.00641025641025641, 0.00641025641025641, 0.003205128205128205, 0.003205128205128205, 0.003205128205128205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1053 = [i * 100 for i in precisions1053]
    recalls1053 = [0.398, 0.396, 0.396, 0.392, 0.392, 0.392, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.388, 0.386, 0.386, 0.384, 0.384, 0.384, 0.382, 0.382, 0.382, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.376, 0.376, 0.374, 0.372, 0.364, 0.36, 0.356, 0.356, 0.354, 0.35, 0.35, 0.35, 0.348, 0.344, 0.344, 0.34, 0.33, 0.324, 0.308, 0.3, 0.292, 0.286, 0.278, 0.262, 0.252, 0.242, 0.226, 0.214, 0.202, 0.182, 0.176, 0.17, 0.16, 0.154, 0.152, 0.142, 0.13, 0.108, 0.094, 0.086, 0.068, 0.064, 0.058, 0.054, 0.046, 0.046, 0.042, 0.028, 0.018, 0.014, 0.008, 0.004, 0.004, 0.002, 0.002, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1053 = [i * 100 for i in recalls1053]
    axisPR.plot(recalls1053, precisions1053, label = "SF=1.05, N=3")
    # Data for precisions and recalls of VJ (SF = 1.05, N = 5) in percent
    precisions1055 = [0.7666666666666667, 0.7625, 0.7625, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7583333333333333, 0.7541666666666667, 0.7541666666666667, 0.7541666666666667, 0.75, 0.75, 0.75, 0.7458333333333333, 0.7458333333333333, 0.7416666666666667, 0.7416666666666667, 0.7416666666666667, 0.7416666666666667, 0.7416666666666667, 0.7333333333333333, 0.7333333333333333, 0.7333333333333333, 0.7291666666666666, 0.7166666666666667, 0.7125, 0.7083333333333334, 0.7083333333333334, 0.7041666666666667, 0.6958333333333333, 0.6958333333333333, 0.6958333333333333, 0.6916666666666667, 0.6833333333333333, 0.6833333333333333, 0.675, 0.6583333333333333, 0.6458333333333334, 0.6125, 0.5958333333333333, 0.5791666666666667, 0.5666666666666667, 0.55, 0.5166666666666667, 0.49583333333333335, 0.475, 0.45, 0.42916666666666664, 0.4041666666666667, 0.3625, 0.35, 0.3416666666666667, 0.32083333333333336, 0.30833333333333335, 0.29583333333333334, 0.2791666666666667, 0.25833333333333336, 0.21666666666666667, 0.18333333333333332, 0.16666666666666666, 0.13333333333333333, 0.125, 0.1125, 0.10416666666666667, 0.08333333333333333, 0.08333333333333333, 0.075, 0.05, 0.03333333333333333, 0.025, 0.016666666666666666, 0.008333333333333333, 0.008333333333333333, 0.004166666666666667, 0.004166666666666667, 0.004166666666666667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    precisions1055 = [i * 100 for i in precisions1055]
    recalls1055 = [0.368, 0.366, 0.366, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.364, 0.362, 0.362, 0.362, 0.36, 0.36, 0.36, 0.358, 0.358, 0.356, 0.356, 0.356, 0.356, 0.356, 0.352, 0.352, 0.352, 0.35, 0.344, 0.342, 0.34, 0.34, 0.338, 0.334, 0.334, 0.334, 0.332, 0.328, 0.328, 0.324, 0.316, 0.31, 0.294, 0.286, 0.278, 0.272, 0.264, 0.248, 0.238, 0.228, 0.216, 0.206, 0.194, 0.174, 0.168, 0.164, 0.154, 0.148, 0.142, 0.134, 0.124, 0.104, 0.088, 0.08, 0.064, 0.06, 0.054, 0.05, 0.04, 0.04, 0.036, 0.024, 0.016, 0.012, 0.008, 0.004, 0.004, 0.002, 0.002, 0.002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    recalls1055 = [i * 100 for i in recalls1055]
    axisPR.plot(recalls1055, precisions1055, label = "SF=1.05, N=5")
    # Data for precisions and recalls of YOLOv5 in percent
    precisionsYOLOV5 = [0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9839679358717435, 0.9799599198396793, 0.9759519038076152, 0.9759519038076152, 0.9759519038076152, 0.9759519038076152, 0.9759519038076152, 0.9759519038076152, 0.9719438877755511, 0.9719438877755511, 0.969939879759519, 0.9599198396793587, 0.9599198396793587, 0.9559118236472945, 0.9478957915831663, 0.9418837675350702, 0.9378757515030061, 0.9298597194388778, 0.9218436873747495, 0.9178356713426854, 0.9078156312625251, 0.8897795591182365, 0.8677354709418837, 0.8416833667334669, 0.8176352705410822, 0.7875751503006012, 0.7755511022044088, 0.7474949899799599, 0.7234468937875751, 0.6993987975951904, 0.6392785571142284, 0.6012024048096193, 0.5470941883767535, 0.48897795591182364, 0.4288577154308617, 0.3667334669338677, 0.3066132264529058, 0.25250501002004005, 0.21042084168336672, 0.1623246492985972, 0.12625250501002003, 0.08617234468937876, 0.05410821643286573, 0.03406813627254509, 0.02004008016032064, 0.012024048096192385, 0.004008016032064128, 0.0, 0.0]
    precisionsYOLOV5 = [i * 100 for i in precisionsYOLOV5]
    recallsYOLOV5 = [0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.982, 0.978, 0.974, 0.974, 0.974, 0.974, 0.974, 0.974, 0.97, 0.97, 0.968, 0.958, 0.958, 0.954, 0.946, 0.94, 0.936, 0.928, 0.92, 0.916, 0.906, 0.888, 0.866, 0.84, 0.816, 0.786, 0.774, 0.746, 0.722, 0.698, 0.638, 0.6, 0.546, 0.488, 0.428, 0.366, 0.306, 0.252, 0.21, 0.162, 0.126, 0.086, 0.054, 0.034, 0.02, 0.012, 0.004, 0.0, 0.0]
    recallsYOLOV5 = [i * 100 for i in recallsYOLOV5]
    axisPR.plot(recallsYOLOV5, precisionsYOLOV5, color = "black", label = "YOLOv5", linestyle = (0, (5, 1)), linewidth = 2.2)
    # Draw the figure for the recalls and precisions
    axisPR.set_ylim(0, 100)
    axisPR.set_yticks(percentageNumbers, labels = percentageNumbersLabels)
    axisPR.set_xlim(0, 100)
    axisPR.set_xticks(percentageNumbers, labels = percentageNumbersLabels)
    axisPR.set_xlabel('Recall (%)', fontweight ='bold', fontsize = 15)
    axisPR.set_ylabel('Precision (%)', fontweight ='bold', fontsize = 15)
    axisPR.set_title('PR curve for each threshhold (0.01 - 1.00, step 0.01) over 500 ear images', fontweight ='bold', fontsize = 20)
    axisPR.legend()
    figurePR.show()

    # Show the plot (all figures)
    plt.show()